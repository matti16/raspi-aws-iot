name: Lint, Test & Deploy to dev

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SERVICE_NAME: raspberry-aws-iot
  AWS_ACCOUNT: 568480506324
  AWS_REGION: eu-west-1
  PYTHON_VERSION: 3.8


jobs:
  package-web-app:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Package Docker image WebApp
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{secrets.SSH_PRIVATE_KEY}}
      - 
        name: Configure Dev AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ci-deployer-role-dev
          role-duration-seconds: 1200
          role-session-name: GithubBuildDev
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Login to ECR
        run: aws ecr get-login-password --region ${{env.AWS_REGION}} | docker login --username AWS --password-stdin ${{env.AWS_ACCOUNT}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com
      - 
        name: Build and push image
        uses: docker/build-push-action@v1
        with:
          tags: ${{env.AWS_ACCOUNT}}.dkr.ecr.${{env.AWS_REGION}}.amazonaws.com/bmattia/${{env.SERVICE_NAME}}:${{github.sha}}
          path: webapp

  deploy-webapp-dev:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy to WebApp to dev
    runs-on: ubuntu-latest
    needs: package-web-app
    steps:
      - uses: actions/checkout@v2
      - name: Configure Dev AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ci-deployer-role-dev
          role-duration-seconds: 1200
          role-session-name: GithubDeployDev
      - name: Deploy Stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{env.SERVICE_NAME}}-dev
          template: webapp/template.yml
          no-fail-on-empty-changeset: "1"
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: >-
            Env=dev,
            ServiceName=${{env.SERVICE_NAME}},
            Account=${{env.AWS_ACCOUNT}},
            Region=${{env.AWS_REGION}},
            ImageTag=${{github.sha}}